/*
 * This file is generated by jOOQ.
 */
package com.rocketmart.jooq.tables;


import com.rocketmart.jooq.Indexes;
import com.rocketmart.jooq.Keys;
import com.rocketmart.jooq.Rocketmart;
import com.rocketmart.jooq.tables.records.TbOtherContactUsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 관리자 문의
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbOtherContactUs extends TableImpl<TbOtherContactUsRecord> {

    private static final long serialVersionUID = 2099344316;

    /**
     * The reference instance of <code>rocketmart.TB_OTHER_CONTACT_US</code>
     */
    public static final TbOtherContactUs TB_OTHER_CONTACT_US = new TbOtherContactUs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbOtherContactUsRecord> getRecordType() {
        return TbOtherContactUsRecord.class;
    }

    /**
     * The column <code>rocketmart.TB_OTHER_CONTACT_US.CONTACT_SEQ</code>. 컨택 일련번호
     */
    public final TableField<TbOtherContactUsRecord, Integer> CONTACT_SEQ = createField(DSL.name("CONTACT_SEQ"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "컨택 일련번호");

    /**
     * The column <code>rocketmart.TB_OTHER_CONTACT_US.USR_NM</code>. 문의자명
     */
    public final TableField<TbOtherContactUsRecord, String> USR_NM = createField(DSL.name("USR_NM"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "문의자명");

    /**
     * The column <code>rocketmart.TB_OTHER_CONTACT_US.EMAIL</code>. email
     */
    public final TableField<TbOtherContactUsRecord, String> EMAIL = createField(DSL.name("EMAIL"), org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "email");

    /**
     * The column <code>rocketmart.TB_OTHER_CONTACT_US.COMPANY_NM</code>. 회사명
     */
    public final TableField<TbOtherContactUsRecord, String> COMPANY_NM = createField(DSL.name("COMPANY_NM"), org.jooq.impl.SQLDataType.VARCHAR(200).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "회사명");

    /**
     * The column <code>rocketmart.TB_OTHER_CONTACT_US.SUBJECT</code>. 문의 제목
     */
    public final TableField<TbOtherContactUsRecord, String> SUBJECT = createField(DSL.name("SUBJECT"), org.jooq.impl.SQLDataType.VARCHAR(1000).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "문의 제목");

    /**
     * The column <code>rocketmart.TB_OTHER_CONTACT_US.MESSAGE</code>. 문의 본문
     */
    public final TableField<TbOtherContactUsRecord, String> MESSAGE = createField(DSL.name("MESSAGE"), org.jooq.impl.SQLDataType.VARCHAR(4000).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "문의 본문");

    /**
     * The column <code>rocketmart.TB_OTHER_CONTACT_US.REG_TS</code>. 등록일시
     */
    public final TableField<TbOtherContactUsRecord, Timestamp> REG_TS = createField(DSL.name("REG_TS"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "등록일시");

    /**
     * Create a <code>rocketmart.TB_OTHER_CONTACT_US</code> table reference
     */
    public TbOtherContactUs() {
        this(DSL.name("TB_OTHER_CONTACT_US"), null);
    }

    /**
     * Create an aliased <code>rocketmart.TB_OTHER_CONTACT_US</code> table reference
     */
    public TbOtherContactUs(String alias) {
        this(DSL.name(alias), TB_OTHER_CONTACT_US);
    }

    /**
     * Create an aliased <code>rocketmart.TB_OTHER_CONTACT_US</code> table reference
     */
    public TbOtherContactUs(Name alias) {
        this(alias, TB_OTHER_CONTACT_US);
    }

    private TbOtherContactUs(Name alias, Table<TbOtherContactUsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbOtherContactUs(Name alias, Table<TbOtherContactUsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("관리자 문의"));
    }

    public <O extends Record> TbOtherContactUs(Table<O> child, ForeignKey<O, TbOtherContactUsRecord> key) {
        super(child, key, TB_OTHER_CONTACT_US);
    }

    @Override
    public Schema getSchema() {
        return Rocketmart.ROCKETMART;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TB_OTHER_CONTACT_US_PRIMARY);
    }

    @Override
    public UniqueKey<TbOtherContactUsRecord> getPrimaryKey() {
        return Keys.KEY_TB_OTHER_CONTACT_US_PRIMARY;
    }

    @Override
    public List<UniqueKey<TbOtherContactUsRecord>> getKeys() {
        return Arrays.<UniqueKey<TbOtherContactUsRecord>>asList(Keys.KEY_TB_OTHER_CONTACT_US_PRIMARY);
    }

    @Override
    public TbOtherContactUs as(String alias) {
        return new TbOtherContactUs(DSL.name(alias), this);
    }

    @Override
    public TbOtherContactUs as(Name alias) {
        return new TbOtherContactUs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TbOtherContactUs rename(String name) {
        return new TbOtherContactUs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TbOtherContactUs rename(Name name) {
        return new TbOtherContactUs(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, String, String, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
