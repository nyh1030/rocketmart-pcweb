/*
 * This file is generated by jOOQ.
 */
package com.rocketmart.jooq.tables.records;


import com.rocketmart.jooq.tables.Brand;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BrandRecord extends TableRecordImpl<BrandRecord> implements Record3<String, String, Timestamp> {

    private static final long serialVersionUID = 1308749601;

    /**
     * Setter for <code>rocketmart.brand.brandId</code>.
     */
    public void setBrandid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>rocketmart.brand.brandId</code>.
     */
    public String getBrandid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>rocketmart.brand.brandName</code>.
     */
    public void setBrandname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>rocketmart.brand.brandName</code>.
     */
    public String getBrandname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>rocketmart.brand.reg_dts</code>.
     */
    public void setRegDts(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>rocketmart.brand.reg_dts</code>.
     */
    public Timestamp getRegDts() {
        return (Timestamp) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Timestamp> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Timestamp> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Brand.BRAND.BRANDID;
    }

    @Override
    public Field<String> field2() {
        return Brand.BRAND.BRANDNAME;
    }

    @Override
    public Field<Timestamp> field3() {
        return Brand.BRAND.REG_DTS;
    }

    @Override
    public String component1() {
        return getBrandid();
    }

    @Override
    public String component2() {
        return getBrandname();
    }

    @Override
    public Timestamp component3() {
        return getRegDts();
    }

    @Override
    public String value1() {
        return getBrandid();
    }

    @Override
    public String value2() {
        return getBrandname();
    }

    @Override
    public Timestamp value3() {
        return getRegDts();
    }

    @Override
    public BrandRecord value1(String value) {
        setBrandid(value);
        return this;
    }

    @Override
    public BrandRecord value2(String value) {
        setBrandname(value);
        return this;
    }

    @Override
    public BrandRecord value3(Timestamp value) {
        setRegDts(value);
        return this;
    }

    @Override
    public BrandRecord values(String value1, String value2, Timestamp value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BrandRecord
     */
    public BrandRecord() {
        super(Brand.BRAND);
    }

    /**
     * Create a detached, initialised BrandRecord
     */
    public BrandRecord(String brandid, String brandname, Timestamp regDts) {
        super(Brand.BRAND);

        set(0, brandid);
        set(1, brandname);
        set(2, regDts);
    }
}
