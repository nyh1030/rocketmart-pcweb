/*
 * This file is generated by jOOQ.
 */
package com.rocketmart.jooq.tables;


import com.rocketmart.jooq.Rocketmart;
import com.rocketmart.jooq.tables.records.BrandRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Brand extends TableImpl<BrandRecord> {

    private static final long serialVersionUID = -840170692;

    /**
     * The reference instance of <code>rocketmart.brand</code>
     */
    public static final Brand BRAND = new Brand();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BrandRecord> getRecordType() {
        return BrandRecord.class;
    }

    /**
     * The column <code>rocketmart.brand.brandId</code>.
     */
    public final TableField<BrandRecord, String> BRANDID = createField(DSL.name("brandId"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>rocketmart.brand.brandName</code>.
     */
    public final TableField<BrandRecord, String> BRANDNAME = createField(DSL.name("brandName"), org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>rocketmart.brand.reg_dts</code>.
     */
    public final TableField<BrandRecord, Timestamp> REG_DTS = createField(DSL.name("reg_dts"), org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>rocketmart.brand</code> table reference
     */
    public Brand() {
        this(DSL.name("brand"), null);
    }

    /**
     * Create an aliased <code>rocketmart.brand</code> table reference
     */
    public Brand(String alias) {
        this(DSL.name(alias), BRAND);
    }

    /**
     * Create an aliased <code>rocketmart.brand</code> table reference
     */
    public Brand(Name alias) {
        this(alias, BRAND);
    }

    private Brand(Name alias, Table<BrandRecord> aliased) {
        this(alias, aliased, null);
    }

    private Brand(Name alias, Table<BrandRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Brand(Table<O> child, ForeignKey<O, BrandRecord> key) {
        super(child, key, BRAND);
    }

    @Override
    public Schema getSchema() {
        return Rocketmart.ROCKETMART;
    }

    @Override
    public Brand as(String alias) {
        return new Brand(DSL.name(alias), this);
    }

    @Override
    public Brand as(Name alias) {
        return new Brand(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Brand rename(String name) {
        return new Brand(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Brand rename(Name name) {
        return new Brand(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Timestamp> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
