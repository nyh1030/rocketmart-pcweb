/*
 * This file is generated by jOOQ.
 */
package com.rocketmart.jooq.tables;


import com.rocketmart.jooq.Indexes;
import com.rocketmart.jooq.Keys;
import com.rocketmart.jooq.Rocketmart;
import com.rocketmart.jooq.tables.records.TbInquiryDtlRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 상품 문의내역 상세
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbInquiryDtl extends TableImpl<TbInquiryDtlRecord> {

    private static final long serialVersionUID = -330919596;

    /**
     * The reference instance of <code>rocketmart.tb_inquiry_dtl</code>
     */
    public static final TbInquiryDtl TB_INQUIRY_DTL = new TbInquiryDtl();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbInquiryDtlRecord> getRecordType() {
        return TbInquiryDtlRecord.class;
    }

    /**
     * The column <code>rocketmart.tb_inquiry_dtl.INQUIRY_DTL_SEQ</code>. 상품문의 상세 일련번호
     */
    public final TableField<TbInquiryDtlRecord, Integer> INQUIRY_DTL_SEQ = createField(DSL.name("INQUIRY_DTL_SEQ"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "상품문의 상세 일련번호");

    /**
     * The column <code>rocketmart.tb_inquiry_dtl.PRODUCT_SEQ</code>. 상품 일련번호
     */
    public final TableField<TbInquiryDtlRecord, Integer> PRODUCT_SEQ = createField(DSL.name("PRODUCT_SEQ"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "상품 일련번호");

    /**
     * The column <code>rocketmart.tb_inquiry_dtl.MESSAGE</code>. 문의내용
     */
    public final TableField<TbInquiryDtlRecord, String> MESSAGE = createField(DSL.name("MESSAGE"), org.jooq.impl.SQLDataType.VARCHAR(4000).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "문의내용");

    /**
     * The column <code>rocketmart.tb_inquiry_dtl.REPLY_YN</code>. 회신여부
     */
    public final TableField<TbInquiryDtlRecord, String> REPLY_YN = createField(DSL.name("REPLY_YN"), org.jooq.impl.SQLDataType.VARCHAR(10).defaultValue(org.jooq.impl.DSL.field("'N'", org.jooq.impl.SQLDataType.VARCHAR)), this, "회신여부");

    /**
     * The column <code>rocketmart.tb_inquiry_dtl.REG_USR_ID</code>. 등록자아이디
     */
    public final TableField<TbInquiryDtlRecord, String> REG_USR_ID = createField(DSL.name("REG_USR_ID"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "등록자아이디");

    /**
     * The column <code>rocketmart.tb_inquiry_dtl.REG_TS</code>. 등록일시
     */
    public final TableField<TbInquiryDtlRecord, Timestamp> REG_TS = createField(DSL.name("REG_TS"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "등록일시");

    /**
     * The column <code>rocketmart.tb_inquiry_dtl.UPD_USR_ID</code>. 수정자아이디
     */
    public final TableField<TbInquiryDtlRecord, String> UPD_USR_ID = createField(DSL.name("UPD_USR_ID"), org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.field("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "수정자아이디");

    /**
     * The column <code>rocketmart.tb_inquiry_dtl.UPD_TS</code>. 수정일시
     */
    public final TableField<TbInquiryDtlRecord, Timestamp> UPD_TS = createField(DSL.name("UPD_TS"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "수정일시");

    /**
     * Create a <code>rocketmart.tb_inquiry_dtl</code> table reference
     */
    public TbInquiryDtl() {
        this(DSL.name("tb_inquiry_dtl"), null);
    }

    /**
     * Create an aliased <code>rocketmart.tb_inquiry_dtl</code> table reference
     */
    public TbInquiryDtl(String alias) {
        this(DSL.name(alias), TB_INQUIRY_DTL);
    }

    /**
     * Create an aliased <code>rocketmart.tb_inquiry_dtl</code> table reference
     */
    public TbInquiryDtl(Name alias) {
        this(alias, TB_INQUIRY_DTL);
    }

    private TbInquiryDtl(Name alias, Table<TbInquiryDtlRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbInquiryDtl(Name alias, Table<TbInquiryDtlRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("상품 문의내역 상세"));
    }

    public <O extends Record> TbInquiryDtl(Table<O> child, ForeignKey<O, TbInquiryDtlRecord> key) {
        super(child, key, TB_INQUIRY_DTL);
    }

    @Override
    public Schema getSchema() {
        return Rocketmart.ROCKETMART;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TB_INQUIRY_DTL_PRIMARY, Indexes.TB_INQUIRY_DTL_TB_INQUIRY_DTL_TB_PRD_MST_PRODUCT_SEQ_FK);
    }

    @Override
    public Identity<TbInquiryDtlRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TB_INQUIRY_DTL;
    }

    @Override
    public UniqueKey<TbInquiryDtlRecord> getPrimaryKey() {
        return Keys.KEY_TB_INQUIRY_DTL_PRIMARY;
    }

    @Override
    public List<UniqueKey<TbInquiryDtlRecord>> getKeys() {
        return Arrays.<UniqueKey<TbInquiryDtlRecord>>asList(Keys.KEY_TB_INQUIRY_DTL_PRIMARY);
    }

    @Override
    public List<ForeignKey<TbInquiryDtlRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TbInquiryDtlRecord, ?>>asList(Keys.TB_INQUIRY_DTL_TB_PRD_MST_PRODUCT_SEQ_FK);
    }

    public TbPrdMst tbPrdMst() {
        return new TbPrdMst(this, Keys.TB_INQUIRY_DTL_TB_PRD_MST_PRODUCT_SEQ_FK);
    }

    @Override
    public TbInquiryDtl as(String alias) {
        return new TbInquiryDtl(DSL.name(alias), this);
    }

    @Override
    public TbInquiryDtl as(Name alias) {
        return new TbInquiryDtl(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TbInquiryDtl rename(String name) {
        return new TbInquiryDtl(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TbInquiryDtl rename(Name name) {
        return new TbInquiryDtl(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, String, String, String, Timestamp, String, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
